{"version":3,"sources":["components/container/Container.jsx","components/container/index.js","components/app-container/AppContainer.jsx","components/app-container/index.js","hooks/use-current-user/useCurrentUser.js","hooks/use-current-user/index.js","components/private-route/index.js","components/private-route/PrivateRoute.jsx","components/text/Text.jsx","components/text/index.js","scenes/home/components/home-header/HomeHeader.jsx","scenes/home/components/home-header/index.js","scenes/home/components/home-tile-container/HomeTileContainer.jsx","scenes/home/components/home-tile-container/index.js","scenes/home/components/home-tile-title/HomeTileTitle.jsx","scenes/home/components/home-tile-title/index.js","scenes/home/components/home-ticket-tile/index.js","scenes/home/components/home-ticket-tile/HomeTicketTile.jsx","components/button/Button.jsx","components/button/index.js","components/toggle-button/ToggleButton.jsx","components/toggle-button/index.js","components/icon/index.js","components/icon/Icon.jsx","components/icon-button/IconButton.jsx","components/icon-button/index.js","scenes/home/components/home-line-up-tile/components/tile-player/components/player-header/components/header-controls/components/controls-seek-bar/ControlsSeekBar.jsx","scenes/home/components/home-line-up-tile/components/tile-player/components/player-header/components/header-controls/components/controls-seek-bar/index.js","scenes/home/components/home-line-up-tile/components/tile-player/components/player-header/components/header-controls/HeaderControls.jsx","scenes/home/components/home-line-up-tile/components/tile-player/components/player-header/components/header-controls/index.js","scenes/home/components/home-line-up-tile/components/tile-player/components/player-header/PlayerHeader.jsx","scenes/home/components/home-line-up-tile/components/tile-player/components/player-header/index.js","scenes/home/components/home-line-up-tile/components/tile-player/components/player-list/PlayerList.jsx","scenes/home/components/home-line-up-tile/components/tile-player/components/player-list/index.js","scenes/home/components/home-line-up-tile/components/tile-player/components/player-list-item/PlayerListItem.jsx","scenes/home/components/home-line-up-tile/components/tile-player/components/player-list-item/index.js","scenes/home/components/home-line-up-tile/components/tile-player/TilePlayer.jsx","scenes/home/components/home-line-up-tile/components/tile-player/index.js","scenes/home/components/home-line-up-tile/HomeLineUpTile.jsx","scenes/home/components/home-line-up-tile/index.js","hooks/use-event/useEvent.js","hooks/use-event/index.js","scenes/home/Home.jsx","scenes/home/index.js","scenes/sign-in/SignIn.jsx","scenes/sign-in/index.js","App.jsx","configurations/client/configureClient.js","serviceWorker.js","index.js"],"names":["Container","styled","div","AppContainer","GET_CURRENT_USER","gql","useCurrentUser","useQuery","loading","error","data","me","PrivateRoute","children","others","id","render","to","Text","size","weight","color","defaultProps","propTypes","PropTypes","oneOf","HeaderContainer","eventImages","backgroundStyle","url","HeaderFooter","HomeHeader","eventName","HomeTileContainer","TitleContainer","TitleOutline","HomeTileTitle","HomeTicketTile","Button","button","ButtonContainer","checked","checkedColor","uncheckedColor","disabled","ButtonDot","ToggleButton","className","onClick","style","undefined","Icon","width","height","IconButton","BarContainer","currentTrackPercentage","BarDot","ControlsSeekBar","currentTrackDuration","currentTrackTime","setAudioTime","barContainerRef","React","useRef","updateAudioTime","event","barContainerX","current","getBoundingClientRect","left","window","scrollX","barContainerWidth","offsetWidth","clickX","pageX","ref","onMouseDown","document","addEventListener","removeEventListener","ControlsContainer","ControlsIconButton","props","HeaderControls","stepBackwardCurrentTrack","stepForwardCurrentTrack","icon","faStepBackward","marginRight","faStepForward","marginLeft","HeaderButton","HeaderBodyContainer","HeaderText","PlayerHeader","currentTrackName","currentTrackArtists","currentTrackPlayed","playCurrentTrack","pauseCurrentTrack","currentTrackArtistsNames","_","map","currentTrackArtist","name","paddingLeft","faPause","faPlay","join","PlayerList","ItemContainer","ItemMarginContainer","ItemBodyContainer","ItemText","PlayerListItem","currentTrackIndex","trackIndex","trackName","trackArtists","trackLiked","playTrack","addTrackToLiked","removeTrackToLiked","trackArtistsNames","trackArtist","faVolumeUp","fasHeart","farHeart","stopPropagation","PlayerContainer","TilePlayer","eventTracks","eventTracksLiked","setEventTracksLiked","setEventTracksLikable","audioRef","useState","tracks","setTracks","tracksIds","setTracksIds","setCurrentTrackIndex","setCurrentTrackPlayed","setCurrentTrackDuration","setCurrentTrackTime","tracksLikedRef","play","useCallback","load","useEffect","prevCurrentTracks","nextCurrentTrackIds","nextCurrentTracks","reduce","nextCurrentTracksOthers","prevCurrentTrack","prevCurrentTrackId","liked","push","eventTrack","track","nextCurrentTrackLiked","nextCurrentTrack","pause","currentTrack","length","updateTrackLiked","trackRemoved","nextTracksIds","slice","isEmpty","getCurrentTrackData","duration","currentTime","getCurrentTrackTime","reachCurrentTrackEnd","artists","time","trackId","key","src","preview_url","TileFilterContainer","TitleFilterText","HomeLineUpTile","eventTracksLikeable","prevEventTracksLiked","GET_EVENT","useEvent","currentUserId","variables","userId","playlist","HomeContainer","HomeBodyContainer","Home","images","SignInContainer","SignInText","SignInButton","SignIn","location","href","process","client","ApolloClient","uri","credentials","configureClient","App","exact","path","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.62086746.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst Container = styled.div`\n  box-sizing: border-box;\n`;\n\nexport default Container;\n","import Container from \"./Container\";\n\nexport default Container;\n","import styled from \"styled-components\";\nimport Container from \"../container\";\n\nconst AppContainer = styled(Container)`\n  display: flex;\n  flex-direction: column;\n  width: 100vw;\n  height: 100vh;\n  background-color: #212330;\n`;\n\nexport default AppContainer;\n","import AppContainer from \"./AppContainer\";\n\nexport default AppContainer;\n","import { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nconst GET_CURRENT_USER = gql`\n  {\n    me {\n      id\n    }\n  }\n`;\n\n// This doesn't work when session is expired!\n\nconst useCurrentUser = () => {\n  const { loading, error, data } = useQuery(GET_CURRENT_USER);\n\n  if (loading || error) {\n    return { loading, error };\n  }\n\n  // This shouldn't be done that way!\n\n  return { loading, error, ...data.me };\n};\n\nexport default useCurrentUser;\n","import useCurrentUser from \"./useCurrentUser\";\n\nexport default useCurrentUser;\n","import PrivateRoute from \"./PrivateRoute\";\n\nexport default PrivateRoute;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport useCurrentUser from \"../../hooks/use-current-user\";\n\nconst PrivateRoute = ({ children, ...others }) => {\n  const { loading, id } = useCurrentUser();\n\n  return (\n    <Route\n      // eslint-disable-next-line\n      {...others}\n      render={() => {\n        if (loading) return null;\n\n        if (id) return children;\n\n        return <Redirect to=\"/shotgun-player/sign-in\" />;\n      }}\n    />\n  );\n};\n\nPrivateRoute.propTypes = { children: PropTypes.node.isRequired };\n\nexport default PrivateRoute;\n","import PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Text = styled.div`\n  ${({ size, weight, color }) => {\n    return `\n      margin: 0px;\n      padding: 0px;\n      font-family: Roboto;\n      font-size: ${size}px;\n      font-weight: ${weight};\n      line-height: 1.5;\n      color: ${color};\n    `;\n  }}\n`;\n\nText.defaultProps = {\n  size: 16,\n  weight: 400,\n  color: \"white\",\n};\n\nText.propTypes = {\n  size: PropTypes.oneOf([\n    // eslint-disable-line\n    16,\n    18,\n    24,\n  ]),\n  weight: PropTypes.oneOf([\n    // eslint-disable-line\n    400,\n    700,\n  ]),\n  color: PropTypes.oneOf([\n    // eslint-disable-line\n    \"white\",\n    \"grey\",\n  ]),\n};\n\nexport default Text;\n","import Text from \"./Text\";\n\nexport default Text;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Container from \"../../../../components/container\";\nimport Text from \"../../../../components/text\";\n\n// This shouldn't have to worry of not getting images!\n\nconst HeaderContainer = styled(Container)`\n  ${({ eventImages }) => {\n    const backgroundStyle = `\n      background-image: linear-gradient(rgba(26, 27, 38, 0.2), rgb(26, 27, 38)), url(${\n        ((eventImages || [])[0] || {}).url\n      });\n      background-size: cover;\n      background-position: center center;\n      background-repeat: no-repeat;\n    `;\n\n    return `\n      display: flex;\n      flex-shrink: 0;\n      flex-direction: column;\n      justify-content: flex-end;\n      width: 100%;\n      height: 300px;\n      padding-left: 10%;\n      padding-right: 10%;\n      ${eventImages ? backgroundStyle : \"\"}\n      background-color: #1a1b26;\n  `;\n  }}\n`;\n\nconst HeaderFooter = styled(Container)`\n  flex-shrink: 0;\n  width: 100vw;\n  height: 100px;\n  padding-left: 10%;\n  padding-right: 10%;\n  background-color: #1a1b26;\n`;\n\nconst HomeHeader = ({ eventName, eventImages }) => {\n  return (\n    <>\n      <HeaderContainer eventImages={eventImages}>\n        <Text size={32} weight={700}>\n          {/* eslint-disable-line */}\n          {eventName}\n        </Text>\n        <Text size={16} color=\"grey\">\n          {/* eslint-disable-line */}\n          Mon 6 July\n        </Text>\n      </HeaderContainer>\n      <HeaderFooter />\n    </>\n  );\n};\n\nHomeHeader.propTypes = {\n  eventName: PropTypes.string.isRequired,\n  eventImages: PropTypes.array.isRequired, // eslint-disable-line\n};\n\nexport default HomeHeader;\n","import HomeHeader from \"./HomeHeader\";\n\nexport default HomeHeader;\n","import styled from \"styled-components\";\nimport Container from \"../../../../components/container\";\n\nconst HomeTileContainer = styled(Container)`\n  display: flex;\n  flex-shrink: 0;\n  flex-direction: column;\n  width: 50%;\n  margin-right: 50px;\n  margin-bottom: 50px;\n`;\n\nexport default HomeTileContainer;\n","import HomeTileContainer from \"./HomeTileContainer\";\n\nexport default HomeTileContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Container from \"../../../../components/container\";\nimport Text from \"../../../../components/text\";\n\nconst TitleContainer = styled(Container)`\n  display: flex;\n  flex-direction: column;\n  max-width: fit-content;\n`;\n\nconst TitleOutline = styled(Container)`\n  width: 100%;\n  height: 1px;\n  margin-bottom: 50px;\n  background-image: linear-gradient(\n    to right,\n    rgb(108, 19, 221),\n    rgb(253, 48, 154)\n  );\n`;\n\nconst HomeTileTitle = ({ children }) => (\n  <TitleContainer>\n    <Text size={24} weight={700}>\n      {/* eslint-disable-line */}\n      {children}\n    </Text>\n    <TitleOutline />\n  </TitleContainer>\n);\n\nHomeTileTitle.propTypes = { children: PropTypes.node.isRequired };\n\nexport default HomeTileTitle;\n","import HomeTileTitle from \"./HomeTileTitle\";\n\nexport default HomeTileTitle;\n","import HomeTicketTile from \"./HomeTicketTile\";\n\nexport default HomeTicketTile;\n","import React from \"react\";\n// import PropTypes from \"prop-types\";\nimport HomeTileContainer from \"../home-tile-container\";\nimport HomeTileTitle from \"../home-tile-title\";\n\nconst HomeTicketTile = () => (\n  <HomeTileContainer>\n    <HomeTileTitle>\n      {/* eslint-disable-line */}\n      Tickets\n    </HomeTileTitle>\n  </HomeTileContainer>\n);\n\n// HomeTicketTile.propTypes = {};\n\nexport default HomeTicketTile;\n","import styled from \"styled-components\";\n\nconst Button = styled.button`\n  display: flex;\n  margin: 0px;\n  padding: 0px;\n  border: unset;\n  border-radius: 8px;\n  outline: unset;\n  cursor: pointer;\n  background-color: unset;\n\n  &:hover {\n    filter: brightness(105%);\n  }\n`;\n\nexport default Button;\n","import Button from \"./Button\";\n\nexport default Button;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Button from \"../button\";\nimport Container from \"../container\";\n\nconst ButtonContainer = styled(Button)`\n  ${({ checked, checkedColor, uncheckedColor, disabled }) => {\n    return `\n      display: flex;\n      flex-direction: row;\n      width: 35px;\n      height: 20px;\n      border-radius: 10px;\n      ${disabled ? \"cursor: unset;\" : \"\"}\n      background-color: ${checked ? checkedColor : uncheckedColor};\n      transition: background-color 0.1s ease;\n    `;\n  }}\n`;\n\nconst ButtonDot = styled(Container)`\n  ${({ checked }) => {\n    return `\n      position: relative;\n      left: ${!checked ? \"0\" : \"15\"}px;\n      transition: left 0.1s ease;\n      width: 20px;\n      height: 20px;\n      border-radius: 10px;\n      background-color: white;\n    `;\n  }}\n`;\n\nconst ToggleButton = ({\n  // eslint-disable-next-line\n  className,\n  checked,\n  checkedColor,\n  uncheckedColor,\n  style,\n  onClick,\n  ...others\n}) => (\n  <ButtonContainer\n    // eslint-disable-next-line\n    {...others}\n    checked={checked}\n    checkedColor={checkedColor}\n    uncheckedColor={uncheckedColor}\n    onClick={onClick}\n  >\n    <ButtonDot checked={checked} />\n  </ButtonContainer>\n);\n\nToggleButton.defaultProps = {\n  className: undefined,\n  style: undefined,\n};\n\nToggleButton.propTypes = {\n  className: PropTypes.string,\n  checked: PropTypes.bool.isRequired,\n  checkedColor: PropTypes.string.isRequired,\n  uncheckedColor: PropTypes.string.isRequired,\n  style: PropTypes.object, // eslint-disable-line\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ToggleButton;\n","import ToggleButton from \"./ToggleButton\";\n\nexport default ToggleButton;\n","import Icon from \"./Icon\";\n\nexport default Icon;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Icon = ({ size, ...others }) => (\n  <FontAwesomeIcon\n    // eslint-disable-next-line\n    {...others}\n    style={{\n      width: size,\n      height: size,\n    }}\n  />\n);\n\n// This should defined standard values!\n\nIcon.propTypes = {\n  size: PropTypes.number.isRequired,\n};\n\nexport default Icon;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"../button\";\nimport Icon from \"../icon\";\n\nconst IconButton = ({ style, onClick, ...others }) => (\n  <Button style={style} onClick={onClick}>\n    {/* eslint-disable-next-line */}\n    <Icon {...others} />\n  </Button>\n);\nIconButton.defaultProps = {\n  style: undefined,\n  onClick: undefined,\n};\n\nIconButton.propTypes = {\n  style: PropTypes.object, // eslint-disable-line\n  onClick: PropTypes.func,\n};\n\nexport default IconButton;\n","import IconButton from \"./IconButton\";\n\nexport default IconButton;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Container from \"../../../../../../../../../../../../components/container\";\n\n/* \n  If you want a more stylish bar!\n\n  background: linear-gradient(\n    to right,\n    rgb(108, 19, 221),\n    rgb(253, 48, 154) ${currentTrackPercentage}%,\n    grey 0px\n  );\n*/\n\nconst BarContainer = styled(Container)`\n  ${({ currentTrackPercentage }) => `\n    display: flex;\n    flex: 1;\n    flex-direction: row;\n    align-items: center;\n    height: 6px;\n    border-radius: 3px;\n    cursor: pointer;\n    background: linear-gradient(\n      to right,\n      white ${currentTrackPercentage}%,\n      grey 0px\n    );\n  `}\n`;\n\nconst BarDot = styled(Container)`\n  ${({ currentTrackPercentage }) => `\n    position: relative;\n    left: ${currentTrackPercentage - 1}%;\n    width: 10px;\n    height: 10px;\n    border-radius: 5px;\n    cursor: grab;\n    box-shadow: 0px 0px 2px 1px rgba(0,0,0,0.25);\n    background-color: white;\n  `}\n`;\n\nconst ControlsSeekBar = ({ currentTrackDuration, currentTrackTime, setAudioTime }) => {\n  const barContainerRef = React.useRef();\n\n  const currentTrackPercentage = (currentTrackTime / currentTrackDuration) * 100;\n\n  const updateAudioTime = (event) => {\n    // eslint-disable-next-line\n    const barContainerX = barContainerRef.current.getBoundingClientRect().left + window.scrollX;\n    const barContainerWidth = barContainerRef.current.offsetWidth;\n    const clickX = event.pageX;\n    const clickDeltaX = clickX - barContainerX;\n    const timePerPx = currentTrackDuration / barContainerWidth;\n    const time = timePerPx * clickDeltaX;\n    setAudioTime(time);\n  };\n\n  const clickAudioTime = (event) => {\n    updateAudioTime(event);\n\n    /* eslint-disable */\n\n    document.addEventListener(\"mousemove\", updateAudioTime);\n    document.addEventListener(\"mouseup\", () => document.removeEventListener(\"mousemove\", updateAudioTime));\n\n    /* eslint-enable */\n  };\n\n  return (\n    <BarContainer ref={barContainerRef} currentTrackPercentage={currentTrackPercentage} onMouseDown={clickAudioTime}>\n      <BarDot currentTrackPercentage={currentTrackPercentage} />\n    </BarContainer>\n  );\n};\n\nControlsSeekBar.propTypes = {\n  currentTrackDuration: PropTypes.number.isRequired,\n  currentTrackTime: PropTypes.number.isRequired,\n  setAudioTime: PropTypes.number.isRequired,\n};\n\nexport default ControlsSeekBar;\n","import ControlsSeekBar from \"./ControlsSeekBar\";\n\nexport default ControlsSeekBar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { faStepBackward, faStepForward } from \"@fortawesome/free-solid-svg-icons\";\nimport styled from \"styled-components\";\nimport Container from \"../../../../../../../../../../components/container\";\nimport IconButton from \"../../../../../../../../../../components/icon-button\";\nimport ControlsSeekBar from \"./components/controls-seek-bar\";\n\nconst ControlsContainer = styled(Container)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-top: 5px;\n`;\n\nconst ControlsIconButton = (props) => (\n  <IconButton\n    // eslint-disable-next-line\n    {...props}\n    size={10}\n    color=\"#fc0082\"\n  />\n);\n\nconst HeaderControls = ({\n  currentTrackDuration,\n  currentTrackTime,\n  stepBackwardCurrentTrack,\n  stepForwardCurrentTrack,\n  setAudioTime,\n}) => (\n  <ControlsContainer>\n    <ControlsIconButton\n      // eslint-disable-line\n      icon={faStepBackward}\n      style={{ marginRight: 5 }}\n      onClick={stepBackwardCurrentTrack}\n    />\n    <ControlsSeekBar\n      // eslint-disable-line\n      currentTrackDuration={currentTrackDuration}\n      currentTrackTime={currentTrackTime}\n      setAudioTime={setAudioTime}\n    />\n    <ControlsIconButton\n      // eslint-disable-line\n      icon={faStepForward}\n      style={{ marginLeft: 8 }}\n      onClick={stepForwardCurrentTrack}\n    />\n  </ControlsContainer>\n);\n\nHeaderControls.propTypes = {\n  currentTrackDuration: PropTypes.number.isRequired,\n  currentTrackTime: PropTypes.number.isRequired,\n  stepBackwardCurrentTrack: PropTypes.func.isRequired,\n  stepForwardCurrentTrack: PropTypes.func.isRequired,\n  setAudioTime: PropTypes.func.isRequired,\n};\n\nexport default HeaderControls;\n","import HeaderControls from \"./HeaderControls\";\n\nexport default HeaderControls;\n","import _ from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { faPlay, faPause } from \"@fortawesome/free-solid-svg-icons\";\nimport styled from \"styled-components\";\nimport Container from \"../../../../../../../../components/container\";\nimport Button from \"../../../../../../../../components/button\";\nimport Icon from \"../../../../../../../../components/icon\";\nimport Text from \"../../../../../../../../components/text\";\nimport HeaderControls from \"./components/header-controls\";\n\nconst HeaderContainer = styled(Container)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  width: 100%;\n  height: 80px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  padding-left: 25px;\n  padding-right: 25px;\n  background-color: rgba(255, 255, 255, 0.1);\n`;\n\nconst HeaderButton = styled(Button)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 40px;\n  height: 40px;\n  margin-right: 25px;\n  border-radius: 30px;\n  border-style: solid;\n  border-color: #fc0082;\n  border-width: 1px;\n  background-color: unset;\n`;\n\nconst HeaderBodyContainer = styled(Container)`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  min-width: 0px;\n  height: 100%;\n`;\n\n// This is done somewhere else too!\n\nconst HeaderText = styled(Text)`\n  white-space: nowrap;\n  text-align: left;\n  text-overflow: ellipsis;\n  overflow: hidden;\n`;\n\nconst PlayerHeader = ({\n  currentTrackName,\n  currentTrackArtists,\n  currentTrackPlayed,\n  currentTrackDuration,\n  currentTrackTime,\n  playCurrentTrack,\n  pauseCurrentTrack,\n  stepBackwardCurrentTrack,\n  stepForwardCurrentTrack,\n  setAudioTime,\n}) => {\n  // This is done somewhere else too! Also, it should be memorized!\n\n  const currentTrackArtistsNames = _.map(currentTrackArtists, (currentTrackArtist) => currentTrackArtist.name);\n\n  const toggleCurrentTrackPlayed = () => {\n    if (!currentTrackPlayed) {\n      playCurrentTrack();\n    } else {\n      pauseCurrentTrack();\n    }\n  };\n\n  return (\n    <HeaderContainer>\n      <HeaderButton style={{ paddingLeft: !currentTrackPlayed ? 2 : 0 }} onClick={toggleCurrentTrackPlayed}>\n        <Icon icon={!currentTrackPlayed ? faPlay : faPause} size={20} color=\"#fc0082\" />\n      </HeaderButton>\n      <HeaderBodyContainer>\n        <HeaderText size={16} weight={700}>\n          {/* eslint-disable-line */}\n          {currentTrackName}\n        </HeaderText>\n        <HeaderText size={12}>\n          {/* eslint-disable-line */}\n          {_.join(currentTrackArtistsNames, \", \")}\n        </HeaderText>\n        <HeaderControls\n          currentTrackDuration={currentTrackDuration}\n          currentTrackTime={currentTrackTime}\n          stepBackwardCurrentTrack={stepBackwardCurrentTrack}\n          stepForwardCurrentTrack={stepForwardCurrentTrack}\n          setAudioTime={setAudioTime}\n        />\n      </HeaderBodyContainer>\n    </HeaderContainer>\n  );\n};\n\nPlayerHeader.propTypes = {\n  currentTrackName: PropTypes.string.isRequired,\n  currentTrackArtists: PropTypes.array.isRequired, // eslint-disable-line\n  currentTrackPlayed: PropTypes.bool.isRequired,\n  currentTrackDuration: PropTypes.number.isRequired,\n  currentTrackTime: PropTypes.number.isRequired,\n  playCurrentTrack: PropTypes.func.isRequired,\n  pauseCurrentTrack: PropTypes.func.isRequired,\n  stepBackwardCurrentTrack: PropTypes.func.isRequired,\n  stepForwardCurrentTrack: PropTypes.func.isRequired,\n  setAudioTime: PropTypes.func.isRequired,\n};\n\nexport default PlayerHeader;\n","import PlayerHeader from \"./PlayerHeader\";\n\nexport default PlayerHeader;\n","import styled from \"styled-components\";\nimport Container from \"../../../../../../../../components/container\";\n\nconst PlayerList = styled(Container)`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  width: 100%;\n  overflow-y: auto;\n  overflow-x: hidden;\n`;\n\nexport default PlayerList;\n","import PlayerList from \"./PlayerList\";\n\nexport default PlayerList;\n","import _ from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { faVolumeUp, faHeart as fasHeart } from \"@fortawesome/free-solid-svg-icons\";\nimport { faHeart as farHeart } from \"@fortawesome/free-regular-svg-icons\";\nimport styled from \"styled-components\";\nimport Container from \"../../../../../../../../components/container\";\nimport Button from \"../../../../../../../../components/button\";\nimport Icon from \"../../../../../../../../components/icon\";\nimport IconButton from \"../../../../../../../../components/icon-button\";\nimport Text from \"../../../../../../../../components/text\";\n\nconst ItemContainer = styled(Button)`\n  display: flex;\n  flex-shrink: 0;\n  flex-direction: row;\n  justify-content: space-between;\n  width: 100%;\n  height: 50px;\n  border-radius: unset;\n  background-color: rgba(255, 255, 255, 0.05);\n\n  // This isn't following the default behavior!\n\n  &:hover {\n    background-color: rgba(255, 255, 255, 0.175);\n  }\n`;\n\nconst ItemMarginContainer = styled(Container)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 50px;\n  height: 100%;\n`;\n\nconst ItemBodyContainer = styled(Container)`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: center;\n  min-width: 0px;\n  height: 100%;\n  padding-left: 10px;\n`;\n\nconst ItemText = styled(Text)`\n  white-space: nowrap;\n  text-align: left;\n  text-overflow: ellipsis;\n  overflow: hidden;\n`;\n\nconst PlayerListItem = ({\n  // eslint-disable-line\n  currentTrackIndex,\n  currentTrackPlayed,\n  trackIndex,\n  trackName,\n  trackArtists,\n  trackLiked,\n  playTrack,\n  addTrackToLiked,\n  removeTrackToLiked,\n}) => {\n  // This should be memorized!\n\n  const trackArtistsNames = _.map(trackArtists, (trackArtist) => trackArtist.name);\n\n  const playThisTrack = () => playTrack(trackIndex);\n\n  const toggleLikeOfThisTrack = (event) => {\n    event.stopPropagation();\n    if (!trackLiked) {\n      addTrackToLiked(trackIndex);\n    } else {\n      removeTrackToLiked(trackIndex);\n    }\n  };\n\n  return (\n    <ItemContainer onClick={playThisTrack}>\n      <ItemMarginContainer>\n        {currentTrackIndex === trackIndex && currentTrackPlayed ? (\n          <Icon icon={faVolumeUp} color=\"#fc0082\" />\n        ) : (\n          <Text size={12} color=\"grey\">\n            {/* eslint-disable-line */}\n            {`${trackIndex + 1}.`}\n          </Text>\n        )}\n      </ItemMarginContainer>\n      <ItemBodyContainer>\n        <ItemText size={14} weight={700}>\n          {/* eslint-disable-line */}\n          {trackName}\n        </ItemText>\n        <ItemText size={12} color=\"grey\">\n          {/* eslint-disable-line */}\n          {_.join(trackArtistsNames, \", \")}\n        </ItemText>\n      </ItemBodyContainer>\n      <ItemMarginContainer>\n        <IconButton icon={trackLiked ? fasHeart : farHeart} color=\"#fc0082\" onClick={toggleLikeOfThisTrack} />\n      </ItemMarginContainer>\n    </ItemContainer>\n  );\n};\n\nPlayerListItem.propTypes = {\n  currentTrackIndex: PropTypes.number.isRequired,\n  currentTrackPlayed: PropTypes.bool.isRequired,\n  trackIndex: PropTypes.number.isRequired,\n  trackName: PropTypes.string.isRequired,\n  trackArtists: PropTypes.array.isRequired, // eslint-disable-line\n  trackLiked: PropTypes.bool.isRequired,\n  playTrack: PropTypes.func.isRequired,\n  addTrackToLiked: PropTypes.func.isRequired,\n  removeTrackToLiked: PropTypes.func.isRequired,\n};\n\nexport default PlayerListItem;\n","import PlayerListItem from \"./PlayerListItem\";\n\nexport default PlayerListItem;\n","import _ from \"lodash\";\nimport React, { useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Container from \"../../../../../../components/container\";\nimport PlayerHeader from \"./components/player-header\";\nimport PlayerList from \"./components/player-list\";\nimport PlayerListItem from \"./components/player-list-item\";\n\nconst PlayerContainer = styled(Container)`\n  display: flex;\n  flex-direction: column;\n  width: 50%;\n  height: 500px;\n`;\n\nconst TilePlayer = ({\n  // eslint-disable-line\n  eventTracks,\n  eventTracksLiked,\n  setEventTracksLiked,\n  setEventTracksLikable,\n}) => {\n  const audioRef = React.useRef();\n\n  const [tracks, setTracks] = React.useState({});\n  const [tracksIds, setTracksIds] = React.useState([]);\n  const [currentTrackIndex, setCurrentTrackIndex] = React.useState(0);\n  const [currentTrackPlayed, setCurrentTrackPlayed] = React.useState(false);\n  const [currentTrackDuration, setCurrentTrackDuration] = React.useState(0);\n  const [currentTrackTime, setCurrentTrackTime] = React.useState(0);\n\n  const tracksLikedRef = React.useRef(0);\n\n  const playCurrentTrack = () => {\n    setCurrentTrackPlayed(true);\n    audioRef.current.play();\n  };\n\n  const pauseCurrentTrack = () => {\n    setCurrentTrackPlayed(false);\n    audioRef.current.pause();\n  };\n\n  const resetCurrentTrack = () => {\n    setCurrentTrackIndex(0);\n    setCurrentTrackPlayed(false);\n    audioRef.current.pause();\n    audioRef.current.load();\n  };\n\n  const playTrack = React.useCallback((trackIndex) => {\n    setCurrentTrackIndex(trackIndex);\n    audioRef.current.load();\n    playCurrentTrack();\n  }, []);\n\n  React.useEffect(() => {\n    setTracks((prevCurrentTracks) => {\n      const nextCurrentTrackIds = [];\n      if (eventTracksLiked) {\n        const nextCurrentTracks = _.reduce(\n          prevCurrentTracks,\n          (nextCurrentTracksOthers, prevCurrentTrack, prevCurrentTrackId) => {\n            if (!prevCurrentTrack.liked) return nextCurrentTracksOthers;\n            nextCurrentTrackIds.push(prevCurrentTrackId);\n            return { ...nextCurrentTracksOthers, [prevCurrentTrackId]: prevCurrentTrack };\n          },\n          {}\n        );\n        setTracksIds(nextCurrentTrackIds);\n        return nextCurrentTracks;\n      }\n      const nextCurrentTracks = _.reduce(\n        eventTracks,\n        (nextCurrentTracksOthers, { track: eventTrack }) => {\n          const nextCurrentTrackLiked = (prevCurrentTracks[eventTrack.id] || {}).liked || false;\n          const nextCurrentTrack = { ...eventTrack, liked: nextCurrentTrackLiked };\n          nextCurrentTrackIds.push(eventTrack.id);\n          return { ...nextCurrentTracksOthers, [eventTrack.id]: nextCurrentTrack };\n        },\n        {}\n      );\n      setTracksIds(nextCurrentTrackIds);\n      return nextCurrentTracks;\n    });\n\n    resetCurrentTrack();\n  }, [eventTracks, eventTracksLiked]);\n\n  const currentTrack = tracks[tracksIds[currentTrackIndex]] || {};\n\n  const stepBackwardCurrentTrack = () => {\n    playTrack(currentTrackIndex - 1 < 0 ? tracksIds.length - 1 : currentTrackIndex - 1);\n  };\n\n  const stepForwardCurrentTrack = React.useCallback(() => {\n    playTrack(currentTrackIndex + 1 >= tracksIds.length ? 0 : currentTrackIndex + 1);\n  }, [playTrack, currentTrackIndex, tracksIds]);\n\n  const updateTrackLiked = (trackIndex, trackRemoved, trackLiked) => {\n    setTracks((prevCurrentTracks) => {\n      let nextCurrentTrack;\n      if (!trackRemoved) {\n        nextCurrentTrack = {\n          ...prevCurrentTracks[tracksIds[trackIndex]],\n          liked: trackLiked,\n        };\n      }\n\n      return {\n        ...prevCurrentTracks,\n        [tracksIds[trackIndex]]: nextCurrentTrack,\n      };\n    });\n  };\n\n  const addTrackToLiked = (trackIndex) => {\n    tracksLikedRef.current += 1;\n    if (tracksLikedRef.current === 1) {\n      setEventTracksLikable(true);\n    }\n    updateTrackLiked(trackIndex, false, true);\n  };\n\n  const removeTrackToLiked = (trackIndex) => {\n    tracksLikedRef.current -= 1;\n    if (!tracksLikedRef.current) {\n      tracksLikedRef.current = 0;\n      setEventTracksLikable(false);\n    }\n    if (!eventTracksLiked) {\n      updateTrackLiked(trackIndex, false, false);\n    } else {\n      const nextTracksIds = [\n        // eslint-disable-line\n        ...tracksIds.slice(0, trackIndex),\n        ...tracksIds.slice(trackIndex + 1),\n      ];\n      updateTrackLiked(trackIndex, true);\n      if (!_.isEmpty(nextTracksIds)) {\n        setTracksIds(nextTracksIds);\n        if (currentTrackIndex === trackIndex) {\n          if (currentTrackPlayed) {\n            playTrack(currentTrackIndex >= nextTracksIds.length ? 0 : currentTrackIndex);\n          } else {\n            setCurrentTrackIndex(currentTrackIndex >= nextTracksIds.length ? 0 : currentTrackIndex);\n          }\n        } else if (currentTrackIndex > trackIndex) {\n          setCurrentTrackIndex(currentTrackIndex - 1 < 0 ? nextTracksIds.length - 1 : currentTrackIndex - 1);\n        }\n      } else {\n        setEventTracksLiked(false);\n      }\n    }\n  };\n\n  const getCurrentTrackData = () => {\n    setCurrentTrackDuration(audioRef.current.duration);\n    setCurrentTrackTime(audioRef.current.currentTime);\n  };\n\n  const getCurrentTrackTime = () => {\n    setCurrentTrackTime(audioRef.current.currentTime);\n  };\n\n  const reachCurrentTrackEnd = useCallback(() => {\n    if (!currentTrackPlayed) return;\n    stepForwardCurrentTrack();\n  }, [currentTrackPlayed, stepForwardCurrentTrack]);\n\n  const setAudioTime = (time) => {\n    audioRef.current.currentTime = time;\n  };\n\n  React.useEffect(() => {\n    audioRef.current.addEventListener(\"loadeddata\", getCurrentTrackData);\n    audioRef.current.addEventListener(\"timeupdate\", getCurrentTrackTime);\n    audioRef.current.addEventListener(\"ended\", reachCurrentTrackEnd);\n\n    return () => {\n      /* eslint-disable */\n\n      audioRef.current.removeEventListener(\"loadeddata\", getCurrentTrackData);\n      audioRef.current.removeEventListener(\"timeupdate\", getCurrentTrackTime);\n      audioRef.current.removeEventListener(\"ended\", reachCurrentTrackEnd);\n\n      /* eslint-disable */\n    };\n  }, [reachCurrentTrackEnd]);\n\n  return (\n    <PlayerContainer>\n      <PlayerHeader\n        // eslint-disable-line\n        currentTrackName={currentTrack.name}\n        currentTrackArtists={currentTrack.artists}\n        currentTrackPlayed={currentTrackPlayed}\n        currentTrackDuration={currentTrackDuration}\n        currentTrackTime={currentTrackTime}\n        playCurrentTrack={playCurrentTrack}\n        pauseCurrentTrack={pauseCurrentTrack}\n        stepBackwardCurrentTrack={stepBackwardCurrentTrack}\n        stepForwardCurrentTrack={stepForwardCurrentTrack}\n        setAudioTime={setAudioTime}\n      />\n      <PlayerList>\n        {_.map(tracksIds, (trackId, trackIndex) => {\n          const {\n            // eslint-disable-line\n            name: trackName,\n            artists: trackArtists,\n            liked: trackLiked,\n          } = tracks[tracksIds[trackIndex]] || {};\n          return (\n            <PlayerListItem\n              // eslint-disable-line\n              key={trackId}\n              currentTrackIndex={currentTrackIndex}\n              currentTrackPlayed={currentTrackPlayed}\n              trackIndex={trackIndex}\n              trackName={trackName}\n              trackArtists={trackArtists}\n              trackLiked={trackLiked}\n              playTrack={playTrack}\n              addTrackToLiked={addTrackToLiked}\n              removeTrackToLiked={removeTrackToLiked}\n            />\n          );\n        })}\n      </PlayerList>\n      {/* eslint-disable-next-line */}\n      <audio ref={audioRef}>\n        <source src={currentTrack.preview_url} />\n      </audio>\n    </PlayerContainer>\n  );\n};\n\nTilePlayer.propTypes = {\n  eventTracks: PropTypes.array.isRequired, // eslint-disable-line\n  eventTracksLiked: PropTypes.bool.isRequired,\n  setEventTracksLiked: PropTypes.func.isRequired,\n  setEventTracksLikable: PropTypes.func.isRequired,\n};\n\nexport default TilePlayer;\n","import TilePlayer from \"./TilePlayer\";\n\nexport default TilePlayer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Container from \"../../../../components/container\";\nimport Text from \"../../../../components/text\";\n\nimport ToggleButton from \"../../../../components/toggle-button\";\nimport HomeTileContainer from \"../home-tile-container\";\nimport HomeTileTitle from \"../home-tile-title\";\nimport TilePlayer from \"./components/tile-player\";\n\nconst TileFilterContainer = styled(Container)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  width: 50%;\n  margin-bottom: 20px;\n`;\n\nconst TitleFilterText = styled(Text)`\n  margin-right: 10px;\n`;\n\nconst HomeLineUpTile = ({ eventTracks }) => {\n  const [eventTracksLiked, setEventTracksLiked] = React.useState(false);\n  const [eventTracksLikeable, setEventTracksLikable] = React.useState(false);\n\n  const toggleEventTracksLiked = () => {\n    setEventTracksLiked((prevEventTracksLiked) => !prevEventTracksLiked);\n  };\n\n  return (\n    <HomeTileContainer>\n      <HomeTileTitle>\n        {/* eslint-disable-line */}\n        Line Up\n      </HomeTileTitle>\n      <TileFilterContainer>\n        <TitleFilterText size={12}>\n          {/* eslint-disable-line */}\n          Show liked tracks only :\n        </TitleFilterText>\n        <ToggleButton\n          checked={eventTracksLiked}\n          checkedColor=\"#fc0082\"\n          uncheckedColor=\"grey\"\n          onClick={toggleEventTracksLiked}\n          disabled={!eventTracksLikeable}\n        />\n      </TileFilterContainer>\n      <TilePlayer\n        // eslint-disable-line\n        eventTracks={eventTracks}\n        eventTracksLiked={eventTracksLiked}\n        setEventTracksLiked={setEventTracksLiked}\n        setEventTracksLikable={setEventTracksLikable}\n      />\n    </HomeTileContainer>\n  );\n};\n\nHomeLineUpTile.propTypes = {\n  eventTracks: PropTypes.array.isRequired, // eslint-disable-line\n};\n\nexport default HomeLineUpTile;\n","import HomeLineUpTile from \"./HomeLineUpTile\";\n\nexport default HomeLineUpTile;\n","import { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport useCurrentUser from \"../use-current-user\";\n\nconst GET_EVENT = gql`\n  query getEvent($id: String!, $userId: String!) {\n    playlist(id: $id, userId: $userId) {\n      id\n      name\n      owner {\n        id\n        display_name\n      }\n      images {\n        url\n      }\n      description\n      tracks {\n        track {\n          id\n          name\n          artists {\n            name\n          }\n          preview_url\n        }\n      }\n    }\n  }\n`;\n\nconst useEvent = (id) => {\n  const { id: currentUserId } = useCurrentUser();\n\n  const { loading, error, data } = useQuery(GET_EVENT, {\n    variables: { id, userId: currentUserId },\n  });\n\n  if (loading || error) {\n    return { loading, error };\n  }\n\n  // This shouldn't be done that way!\n\n  return { loading, error, ...data.playlist };\n};\n\nexport default useEvent;\n","import useEvent from \"./useEvent\";\n\nexport default useEvent;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Container from \"../../components/container\";\nimport HomeHeader from \"./components/home-header\";\nimport HomeTicketTile from \"./components/home-ticket-tile\";\nimport HomeLineUpTile from \"./components/home-line-up-tile\";\nimport useEvent from \"../../hooks/use-event\";\n\nconst HomeContainer = styled(Container)`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  overflow-y: auto;\n  overflow-x: hidden;\n`;\n\nconst HomeBodyContainer = styled(Container)`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  padding-top: 50px;\n  padding-left: 10%;\n  padding-right: 10%;\n`;\n\nconst Home = () => {\n  const {\n    // eslint-disable-line\n    loading,\n    name: eventName,\n    images: eventImages,\n    tracks: eventTracks,\n  } = useEvent(\"7Cy3wdbRlZqW22fUDGWpwk\");\n\n  if (loading) return null;\n\n  return (\n    <HomeContainer>\n      <HomeHeader\n        // eslint-disable-line\n        eventName={eventName}\n        eventImages={eventImages}\n      />\n      <HomeBodyContainer>\n        <HomeTicketTile />\n        <HomeLineUpTile eventTracks={eventTracks} />\n      </HomeBodyContainer>\n    </HomeContainer>\n  );\n};\n\nexport default Home;\n","import Home from \"./Home\";\n\nexport default Home;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Container from \"../../components/container\";\nimport Text from \"../../components/text\";\nimport Button from \"../../components/button\";\n\nconst SignInContainer = styled(Container)`\n  margin: auto;\n`;\n\nconst SignInText = styled(Text)`\n  margin-bottom: 20px;\n`;\n\nconst SignInButton = styled(Button)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 500px;\n  height: 50px;\n  background-color: #1db954;\n`;\n\nconst SignIn = () => {\n  const onButtonClick = () => {\n    // eslint-disable-next-line\n    window.location.href = `${process.env.REACT_APP_API_URL}/auth/connect`;\n  };\n\n  return (\n    <SignInContainer>\n      <Text size={24} weight={700} color=\"white\">\n        {/* eslint-disable-line */}\n        Sign In\n      </Text>\n      <SignInText color=\"grey\">\n        {/* eslint-disable-line */}\n        Discover the event line up and more!\n      </SignInText>\n      <SignInButton onClick={onButtonClick}>\n        <Text size={18} weight={700}>\n          {/* eslint-disable-line */}\n          Continue with Spotify\n        </Text>\n      </SignInButton>\n    </SignInContainer>\n  );\n};\n\nexport default SignIn;\n","import SignIn from \"./SignIn\";\n\nexport default SignIn;\n","import React from \"react\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport AppContainer from \"./components/app-container\";\nimport PrivateRoute from \"./components/private-route\";\n// import PublicRoute from \"./components/public-route\";\nimport Home from \"./scenes/home\";\nimport SignIn from \"./scenes/sign-in\";\nimport configureClient from \"./configurations/client\";\n\nconst client = configureClient();\n\nconst App = () => {\n  return (\n    <ApolloProvider client={client}>\n      <AppContainer>\n        <Router>\n          <Switch>\n            <PrivateRoute exact path=\"/shotgun-player\">\n              <Home />\n            </PrivateRoute>\n            <Route exact path=\"/shotgun-player/sign-in\">\n              <SignIn />\n            </Route>\n            <Redirect to=\"/shotgun-player\" />\n          </Switch>\n        </Router>\n      </AppContainer>\n    </ApolloProvider>\n  );\n};\n\nexport default App;\n","import ApolloClient from \"apollo-boost\";\n\nconst configureClient = () =>\n  new ApolloClient({\n    uri: `${process.env.REACT_APP_API_URL}/graphql`,\n    credentials: \"include\",\n  });\n\nexport default configureClient;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./index.css\";\n\n/* eslint-disable */\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n/* eslint-enable */\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}